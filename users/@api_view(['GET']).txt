@api_view(['GET'])
def get_user_scores(request, user_id, semester):
    def calculate_radar_chart_scores(scores):
        for score in scores:
            total = score.tech + score.etc + score.art + score.sports + score.academic
            score.percentage_tech = (
                score.tech / total) * 100 if total != 0 else 0
            score.percentage_etc = (score.etc / total) * \
                100 if total != 0 else 0
            score.percentage_art = (score.art / total) * \
                100 if total != 0 else 0
            score.percentage_sports = (
                score.sports / total) * 100 if total != 0 else 0
            score.percentage_academic = (
                score.academic / total) * 100 if total != 0 else 0
        return scores

    def calculate_percentage_growth(scores, current_sem):
        overall_values = {}
        for score in scores:
            if score.sem <= current_sem:
                if score.sem not in overall_values:
                    overall_values[score.sem] = score.overall
                else:
                    overall_values[score.sem] += score.overall

        growth = {}
        prev_overall = None
        for sem, overall in sorted(overall_values.items()):
            if prev_overall is None:
                prev_overall = overall
                continue
            # Calculate percentage growth only if there's a change in value
            if prev_overall != overall:
                if prev_overall != 0:
                    growth[sem] = ((overall - prev_overall) /
                                   prev_overall) * 100
                else:
                    growth[sem] = 0
            else:
                growth[sem] = 0
            prev_overall = overall

    try:
        scores = Scores.objects.filter(student_id=user_id)
    except Scores.DoesNotExist:
        return Response(status=status.HTTP_404_NOT_FOUND)

    scores_with_percentage = calculate_radar_chart_scores(scores)

    radar_chart_data = []
    for score in scores_with_percentage:
        radar_chart_data.append({
            'id': score.id,
            'percentage_tech': score.percentage_tech,
            'percentage_etc': score.percentage_etc,
            'percentage_art': score.percentage_art,
            'percentage_sports': score.percentage_sports,
            'percentage_academic': score.percentage_academic,
        })

    growth_data = calculate_percentage_growth(scores_with_percentage, semester)

    response_data = {'scores': radar_chart_data, 'radar_chart': growth_data}

    return Response(response_data)
